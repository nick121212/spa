{"version":3,"sources":["../../src/lib/application.js"],"names":["server","client","connections","SpaServer","config","init","transport","allow","exports","on","connection","id","socket","emit","SpaClient","uri","prefix","isReady","serverProxy","Spa","ctx","err","console","log","routerKey","app","jobs","context","retId","return","body","spaClient","spaServer","attach"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;;;;;AAPA;;;;AASA,IAAIA,eAAJ;AAAA,IAAYC,eAAZ;AAAA,IAAoBC,cAAc,EAAlC;;IAEaC,S,WAAAA,S;;;AACT,uBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAGhB,cAAKC,IAAL,CAAUD,MAAV;AAHgB;AAInB;;;;6BAUIA,M,EAAQ;AAAA;;AACTJ,qBAAS,mBAAW;AAChBM,2BAAWF,OAAOE,SADF;AAEhBC,uBAAOH,OAAOG,KAAP,IAAgB;AAFP,aAAX,CAAT;AAIAP,mBAAOQ,OAAP,GAAiB,EAAjB;AACAR,mBAAOS,EAAP,CAAU,SAAV,EAAqB,UAACC,UAAD,EAAgB;AACjCR,4BAAYQ,WAAWC,EAAvB,IAA6B;AACzBC,4BAAQF;AADiB,iBAA7B;AAGA,uBAAKG,IAAL,CAAU,WAAV,EAAuBH,UAAvB,EAAmCR,YAAYQ,WAAWC,EAAvB,CAAnC;AACH,aALD;AAMAX,mBAAOS,EAAP,CAAU,YAAV,EAAwB,UAACC,UAAD,EAAgB;AACpC,oBAAIR,YAAYQ,WAAWC,EAAvB,CAAJ,EAAgC;AAC5B,2BAAOT,YAAYQ,WAAWC,EAAvB,CAAP;AACH;AACJ,aAJD;;AAMA,mBAAOX,MAAP;AACH;;;4BA3BY;AACT,mBAAOA,MAAP;AACH;;;4BAEiB;AACd,mBAAOE,WAAP;AACH;;;;;IAwBQY,S,WAAAA,S;;;AACT,uBAAYV,MAAZ,EAAoB;AAAA;;AAAA;;AAGhB,eAAKC,IAAL,CAAUD,MAAV;AAHgB;AAInB;;;;6BAYIA,M,EAAQ;AACTH,qBAAS,mBAAW;AAChBc,qBAAKX,OAAOW,GADI;AAEhBC,wBAAQZ,OAAOY,MAAP,IAAiB;AAFT,aAAX,CAAT;AAIH;;;4BAfY;AACT,mBAAOf,MAAP;AACH;;;4BAEW;AACR,gBAAIA,UAAUA,OAAOgB,OAAP,EAAd,EAAgC;AAC5B,uBAAOhB,OAAOiB,WAAd;AACH;AACJ;;;;;IAUQC,G,WAAAA,G;;;AACT,mBAAc;AAAA;AAAA;AAEb;;;;mCAEUC,G,EAAK;AACZ,gBAAIA,IAAIC,GAAR,EAAa;AACTC,wBAAQC,GAAR,CAAY,iBAAZ,EAA+BH,IAAIC,GAAnC;AACH;AACDC,oBAAQC,GAAR,CAAY,iBAAZ,EAA+BH,IAAII,SAAnC,EAA8CJ,IAAIK,GAAJ,CAAQC,IAAtD,EAA4D,QAA5D,EAAsEN,IAAIO,OAAJ,CAAYC,KAAlF;AACA,uIAAiBR,GAAjB;;AAEAA,gBAAIO,OAAJ,CAAYE,MAAZ,IAAsBT,IAAIO,OAAJ,CAAYE,MAAZ,CAAmBT,IAAIC,GAAJ,IAAWD,IAAIU,IAAlC,CAAtB;AACH;;;mCAEU1B,M,EAAQ;AACf,iBAAK2B,SAAL,GAAiB,IAAIjB,SAAJ,CAAcV,MAAd,CAAjB;AACH;;;mCAEUA,M,EAAQqB,G,EAAK;AACpB,iBAAKO,SAAL,GAAiB,IAAI7B,SAAJ,CAAcC,MAAd,CAAjB;AACA,iBAAK4B,SAAL,CAAehC,MAAf,CAAsBiC,MAAtB,CAA6BR,GAA7B;AACH","file":"application.js","sourcesContent":["/**\n * Created by NICK on 2016/12/16.\n */\n\nimport { Server, Client } from \"eureca.io\";\nimport { EventEmitter } from \"events\";\nimport { Compose } from \"./compose\";\nimport _ from \"lodash\";\n\nlet server, client, connections = {};\n\nexport class SpaServer extends EventEmitter {\n    constructor(config) {\n        super();\n\n        this.init(config);\n    }\n\n    get server() {\n        return server;\n    }\n\n    get connections() {\n        return connections;\n    }\n\n    init(config) {\n        server = new Server({\n            transport: config.transport,\n            allow: config.allow || []\n        });\n        server.exports = {};\n        server.on(\"connect\", (connection) => {\n            connections[connection.id] = {\n                socket: connection\n            };\n            this.emit(\"onconnect\", connection, connections[connection.id]);\n        });\n        server.on(\"disconnect\", (connection) => {\n            if (connections[connection.id]) {\n                delete connections[connection.id];\n            }\n        });\n\n        return server;\n    }\n}\n\nexport class SpaClient extends EventEmitter {\n    constructor(config) {\n        super();\n\n        this.init(config);\n    }\n\n    get client() {\n        return client;\n    }\n\n    get proxy() {\n        if (client && client.isReady()) {\n            return client.serverProxy;\n        }\n    }\n\n    init(config) {\n        client = new Client({\n            uri: config.uri,\n            prefix: config.prefix || \"\"\n        });\n    }\n}\n\nexport class Spa extends Compose {\n    constructor() {\n        super();\n    }\n\n    onComplete(ctx) {\n        if (ctx.err) {\n            console.log(\"onComplete-----\", ctx.err);\n        }\n        console.log(\"onComplete-----\", ctx.routerKey, ctx.app.jobs, \"retId:\", ctx.context.retId);\n        super.onComplete(ctx);\n\n        ctx.context.return && ctx.context.return(ctx.err || ctx.body);\n    }\n\n    initClient(config) {\n        this.spaClient = new SpaClient(config);\n    }\n\n    initServer(config, app) {\n        this.spaServer = new SpaServer(config);\n        this.spaServer.server.attach(app);\n    }\n}"]}