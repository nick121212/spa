{"version":3,"sources":["../../src/lib/config.js"],"names":["Configurator","file","reload","config","oldConfig","automaticConfigReload","updateConfig","log","process","pid","JSON","parse","readFileSync","configFile","argv","length","console","exit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;IAEaA,Y,WAAAA,Y;;;AACZ,uBAAYC,IAAZ,EAAkBC,MAAlB,EAA0B;AAAA;;AAAA;;AAGzB,QAAKC,MAAL,GAAc,EAAd;AACA,QAAKC,SAAL,GAAiB,EAAjB;AACA,QAAKC,qBAAL,GAA6BH,MAA7B;AACA,QAAKI,YAAL,CAAkBL,IAAlB;AANyB;AAOzB;;;;+BAEYA,I,EAAM;AAClB,kBAAKM,GAAL,OAAaC,QAAQC,GAArB,+BAAkDR,IAAlD;AACA,OAAIE,SAASO,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBX,IAAhB,EAAsB,MAAtB,CAAX,CAAb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAKG,SAAL,GAAiB,KAAKD,MAAtB;AACA,QAAKA,MAAL,GAAcA,MAAd;AACA;;;;;AAGK,IAAMU,kCAAa,SAAbA,UAAa,GAAM;AAC/B,KAAIL,QAAQM,IAAR,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;AAC5BC,UAAQT,GAAR,CAAY,cAAZ;AACAC,UAAQS,IAAR,CAAa,CAAb;AACA;AACD,KAAId,SAAS,IAAIH,YAAJ,CAAiBQ,QAAQM,IAAR,CAAa,CAAb,CAAjB,CAAb;;AAEA,QAAOX,OAAOA,MAAd;AACA,CARM","file":"config.js","sourcesContent":["import fs from \"fs\";\nimport util from \"util\";\nimport { EventEmitter } from \"events\";\n\nexport class Configurator extends EventEmitter {\n\tconstructor(file, reload) {\n\t\tsuper();\n\n\t\tthis.config = {};\n\t\tthis.oldConfig = {};\n\t\tthis.automaticConfigReload = reload;\n\t\tthis.updateConfig(file);\n\t}\n\n\tupdateConfig(file) {\n\t\tutil.log(`[${process.pid}] reading config file: ${file}`);\n\t\tlet config = JSON.parse(fs.readFileSync(file, \"utf8\"));\n\n\t\t// fs.watch(file, (event, filename) => {\n\t\t//     if (event == 'change' && this.config.automaticConfigReload != false) {\n\t\t//         this.updateConfig();\n\t\t//     }\n\t\t// });\n\n\t\tthis.oldConfig = this.config;\n\t\tthis.config = config;\n\t}\n}\n\nexport const configFile = () => {\n\tif (process.argv.length < 2) {\n\t\tconsole.log(\"没有定义config文件\");\n\t\tprocess.exit(1);\n\t}\n\tlet config = new Configurator(process.argv[2]);\n\n\treturn config.config;\n};"]}