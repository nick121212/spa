{"version":3,"sources":["../../src/lib/router.middleware.js"],"names":["SpaRouter","keys","proxy","app","exports","extend","fn","forEach","val","key","data","context","async","callback","retId","clone","ctx","next","hasOwnProperty","routerKey","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;IAEaA,S,WAAAA,S;;;AACZ,sBAAc;AAAA;;AAAA;;AAGb,QAAKC,IAAL,GAAY,EAAZ;AAHa;AAIb;;AAED;;;;;;;yBAGOC,K,EAAOC,G,EAAK;AAAA;;AAClB,QAAKD,KAAL,GAAaA,KAAb;AACA,QAAKA,KAAL,CAAWE,OAAX,GAAqB,iBAAEC,MAAF,CAAS,EAAT,EAAa,KAAKH,KAAL,CAAWE,OAAX,IAAsB,EAAnC,CAArB;;AAEA,OAAIE,WAAJ;;AAEA,oBAAEC,OAAF,CAAU,KAAKN,IAAf,EAAqB,UAACO,GAAD,EAAMC,GAAN,EAAc;AAClC,WAAKP,KAAL,CAAWE,OAAX,CAAmBK,GAAnB,IAA0B,UAAUC,IAAV,EAAgB;AACzC,SAAIC,UAAU,IAAd;AACAA,aAAQC,KAAR,GAAgB,IAAhB;AACA,SAAI,CAACN,EAAL,EAAS;AACRA,WAAKH,IAAIU,QAAJ,EAAL;AACA;AACD,SAAI,CAACF,QAAQG,KAAb,EAAoB;;AAEpBR,QAAGG,GAAH,EAAQ,iBAAEM,KAAF,CAAQJ,OAAR,CAAR,EAA0BD,QAAQ,EAAlC;AACA,KATD;AAUA,IAXD;;AAaA;AAAA,0EAAO,iBAAMM,GAAN,EAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cACF,OAAKhB,IAAL,CAAUiB,cAAV,CAAyBF,IAAIG,SAA7B,CADE;AAAA;AAAA;AAAA;;AAAA;AAAA,gBAEC,OAAKlB,IAAL,CAAUe,IAAIG,SAAd,EAAyBH,GAAzB,EAA8BC,IAA9B,CAFD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAICA,MAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAOA;;AAED;;;;;;sCAGoBR,G,EAAKW,I,EAAM;AAC9B,QAAKnB,IAAL,CAAUQ,GAAV,IAAiBW,IAAjB;AACA","file":"router.middleware.js","sourcesContent":["import _ from \"lodash\";\nimport boom from \"boom\";\nimport {EventEmitter} from \"events\";\n\nexport class SpaRouter extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.keys = {};\n\t}\n\n\t/**\n\t * 开始中间件\n\t */\n\tattach(proxy, app) {\n\t\tthis.proxy = proxy;\n\t\tthis.proxy.exports = _.extend({}, this.proxy.exports || {});\n\n\t\tlet fn;\n\n\t\t_.forEach(this.keys, (val, key) => {\n\t\t\tthis.proxy.exports[key] = function (data) {\n\t\t\t\tlet context = this;\n\t\t\t\tcontext.async = true;\n\t\t\t\tif (!fn) {\n\t\t\t\t\tfn = app.callback();\n\t\t\t\t}\n\t\t\t\tif (!context.retId) return;\n\n\t\t\t\tfn(key, _.clone(context), data || {});\n\t\t\t};\n\t\t});\n\n\t\treturn async(ctx, next) => {\n\t\t\tif (this.keys.hasOwnProperty(ctx.routerKey)) {\n\t\t\t\tawait this.keys[ctx.routerKey](ctx, next);\n\t\t\t} else {\n\t\t\t\tawait next();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * 添加路由方法\n\t */\n\tattachRouteToSocket(key, func) {\n\t\tthis.keys[key] = func;\n\t}\n\n}"]}